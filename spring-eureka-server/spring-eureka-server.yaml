apiVersion: v1
kind: Service
metadata:
  name: eureka-server
  labels: 
    app: eureka-server
  namespace: spring-cloud
spec:
  type: NodePort
  ports:
  - port: 8761
    nodePort: 30001
    targetPort: 8761
    name: eureka-server
  selector:
    app: eureka-server
---    
apiVersion: apps/v1beta2
kind: StatefulSet
metadata:
  name: eureka-server
  namespace: spring-cloud
spec:
  serviceName: "eureka-server"
  replicas: 1 
  selector:
    matchLabels:
      app: eureka-server
  template:
    metadata:
      labels:
        app: eureka-server
    spec:
      containers:
      - name: eureka-server
        image: spring-eureka-server:v1
        ports:
        - containerPort: 8761
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
          # Due to camelcase issues with "defaultZone" and "preferIpAddress", _JAVA_OPTIONS is used here
        - name: _JAVA_OPTIONS
          value: -Deureka.instance.preferIpAddress=false -Deureka.client.serviceUrl.defaultZone=http://eureka-server-0.eureka-server:8761/eureka/
        - name: EUREKA_CLIENT_REGISTERWITHEUREKA
          value: "false"
        - name: EUREKA_CLIENT_FETCHREGISTRY
          value: "false"
        # The hostnames must match with the the eureka serviceUrls, otherwise the replicas are reported as unavailable in the eureka dashboard      
        - name: EUREKA_INSTANCE_HOSTNAME
          value: ${MY_POD_NAME}.eureka-server